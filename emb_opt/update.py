# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/07_update.ipynb.

# %% auto 0
__all__ = ['UpdateModule']

# %% ../nbs/07_update.ipynb 3
from .imports import *
from .core import Module
from .schemas import (
                            Item, 
                            Query, 
                            Batch, 
                            UpdateFunction,
                            ContinuousUpdateResponse,
                            UpdateResponse,
                            )

# %% ../nbs/07_update.ipynb 4
class UpdateModule(Module):
    def __init__(self, function: UpdateFunction):
        super().__init__(UpdateResponse, function)
        
    def validate_schema(self, results: UpdateResponse) -> UpdateResponse:
        results = self.output_schema.model_validate(results)
        return results
        
    def build_batch(self, results: UpdateResponse) -> Batch:
        results = results.results
        if isinstance(results, Batch):
            batch = results
        elif isinstance(results[0], Item):
            batch = Batch(queries=[Query.from_item(i) for i in results])
        elif isinstance(results[0], ContinuousUpdateResponse):
            batch = Batch(queries=[Query.from_parent(i.embedding, i.parent_query) for i in results])
            
        return batch
        
    def __call__(self, batch: Batch) -> Batch:
        results = self.function(batch)
        results = self.validate_schema(results)
        batch = self.build_batch(results)
        return batch
